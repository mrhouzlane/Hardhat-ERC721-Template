name: ENV Variables 
on: pull_request
env: 
  WF_ENV: Available for all jobs 


jobs: 
  functions:
    runs-on: ubuntu-latest
    steps:
      - name: dump
        run: |
          echo ${{format('{{Hello {0} {1} {2}!}}', 'Mona', 'the', 'Octocat')}}
          echo ${{endsWith('Hello world', 'ld')}}
          echo ${{startsWith('Hello world', 'He')}}
          echo ${{contains('Hello world', 'worl')}}

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: eccho '${{ toJSON(job) }}'
      - name: Dump steps context
        if: failure()
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        if : always()
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
  decrypt: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v1
      - name: Decrypt file with pass
        run: gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output $HOME/secret.json secret.json.gpg
        env: 
          PASSPHRASE: ${{secrets.PASSPHRASE}}
      - name: Print our file content 
        run : cat $HOME/secret.json
  create-issue:
    runs-on: ubuntu-latest
    steps : 
      - name: Push a random files
        run : | 
          pwd 
          ls -a 
          git init 
          git remote add origin "https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch
          git checkout master
          git branch --set-upstream-to=origin/master
          git pull
          ls -a 
          echo $RANDOM >> random.txt
          ls -a 
          git add -A
          git commit -m "Randomfile"
          git push

      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
  log-env: 
    runs-on: ubuntu-latest
    env:
      JOB_ENV: Available to all steps in log-env job 
    steps: 
      - name: Log ENV Variables
        env :
          STEP_ENV : Available for this step 
        run : |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
      - name: Log ENV 2 
        run : | 
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"

  log-default-env:
    runs-on: ubuntu-latest
    steps: 
      - name: Default ENV Variables 
        run: |
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"


        